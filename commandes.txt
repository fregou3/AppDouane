# Avec nom de fichier automatique (timestamp)
./docker-backup-db.sh

# Avec nom de fichier personnalisé
./docker-backup-db.sh mon_backup

./docker-restore-db.sh backups/douane_backup_20250324_110000.dmp

REM Pour sauvegarder (nom de fichier automatique)
backup-restore-db.bat backup

REM Pour sauvegarder avec nom personnalisé
backup-restore-db.bat backup mon_backup.dump

REM Pour restaurer
backup-restore-db.bat restore mon_backup.dump

# NOUVELLES COMMANDES POWERSHELL (RECOMMANDÉES POUR WINDOWS)

# Pour sauvegarder avec nom de fichier automatique (timestamp)
.\Backup-DB.ps1

# Pour sauvegarder avec nom personnalisé
.\Backup-DB.ps1 douane_24032025_11h18

# Pour restaurer
.\Restore-DB.ps1 douane_24032025_11h18.dmp

# INITIALISATION DE LA BASE DE DONNÉES

# Pour initialiser la base de données avec le fichier SQL par défaut
.\Init-DB.ps1

# Pour initialiser la base de données avec un fichier SQL spécifique
.\Init-DB.ps1 chemin\vers\fichier.sql

# RESTAURATION D'UNE SAUVEGARDE CRÉÉE SOUS LINUX

# Pour restaurer une sauvegarde créée sous Linux
.\Restore-Linux-Backup.ps1 douane_backup_20250324_104034.dmp

# SAUVEGARDE ET IMPORTATION EN FORMAT SQL (COMPATIBLE LINUX/WINDOWS)

# Pour sauvegarder en format SQL sur Linux
./linux-backup-sql.sh douane_sql_backup.sql

# Pour importer un fichier SQL sur Windows
.\Import-SQL.ps1 douane_sql_backup.sql

# REMARQUE SUR LES FORMATS DE SAUVEGARDE
# Les scripts de sauvegarde (Backup-DB.ps1 et docker-backup-db.sh) créent maintenant deux fichiers :
# - Un fichier .dmp (format binaire) pour une restauration rapide sur le même système
# - Un fichier .sql (format texte) pour une compatibilité maximale entre Linux et Windows



cd C:\App\douane_V3_1.0\douane_v3.9.5\backend
node server.js

cd C:\App\douane_V3_1.0\douane_v3.9.5\backend
node standalone-pdf-server.js


taskkill /F /IM node.exe

node image-server.js

node standalone-pdf-server.js

cd C:\App\douane_V3_1.0\douane_v3.9.10; npm install dotenv express cors multer openai

cd C:\App\douane_V3_1.0\douane_v3.9.10; node image-server.js

Backend principal sur le port 5004
Serveur d'analyse de PDF sur le port 5005
Serveur d'image sur le port 5006

# Démarrer le serveur d'image sur le port 5006
cd /home/ubuntu/douane_v3.9.11/AppDouane/
sudo pm2 start image-server.js --name "douane-image"

# Démarrer le frontend React avec un serveur HTTP natif
cd /home/ubuntu/douane_v3.9.11/AppDouane/frontend/
# Installer les dépendances si ce n'est pas déjà fait
sudo npm install
# Construire une version de production du frontend
sudo npm run build
# Démarrer le frontend avec le serveur HTTP natif sur le port 3004
sudo pm2 start static-server.js --name "douane-frontend"

# Voir les processus en cours d'exécution
sudo pm2 list

# Arrêter tous les processus si nécessaire
sudo pm2 stop all

# Redémarrer tous les processus
sudo pm2 restart all

# Configurer PM2 pour démarrer automatiquement au redémarrage du système
sudo pm2 startup
sudo pm2 save

# Voir les logs d'un processus spécifique
sudo pm2 logs douane-frontend
sudo pm2 logs douane-backend
sudo pm2 logs douane-image
sudo pm2 logs douane-pdf

# =============================================
# COMMANDES OPTIMISÉES POUR LE DÉPLOIEMENT
# =============================================

# Supprimer toutes les instances PM2 et libérer les ports
sudo pm2 stop all
sudo pm2 delete all
sudo pm2 save --force
sudo pkill -f node

# Vérifier qu'aucun processus n'utilise les ports
sudo lsof -i :5004
sudo lsof -i :5005
sudo lsof -i :5006
sudo lsof -i :3004

# Démarrer le backend depuis le répertoire backend (avec le bon .env)
cd /home/ubuntu/douane_v3.9.12/AppDouane/backend
NODE_ENV=production npm run start:linux

# Démarrer le serveur d'images
cd /home/ubuntu/douane_v3.9.12/AppDouane
sudo pm2 start image-server.js --name "douane-image"

# Démarrer le serveur PDF depuis le répertoire backend
cd /home/ubuntu/douane_v3.9.12/AppDouane/backend
sudo pm2 start standalone-pdf-server.js --name "douane-pdf"

# Démarrer le frontend
cd /home/ubuntu/douane_v3.9.12/AppDouane/frontend
sudo pm2 start serve --name "douane-frontend" -- -s build -l 3004

# Sauvegarder la configuration PM2
sudo pm2 save

# =============================================
# COMMANDES POUR LA RÉSOLUTION DES PROBLÈMES
# =============================================

# Libérer un port spécifique (remplacer PORT par le numéro de port)
sudo fuser -k PORT/tcp

# Identifier tous les processus Node.js en cours d'exécution
ps aux | grep node

# Vérifier les connexions réseau actives
sudo netstat -tulpn | grep LISTEN

# Vérifier l'espace disque disponible
df -h

# Vérifier l'utilisation des bases vectorielles
du -sh /home/ubuntu/douane_v3.9.12/AppDouane/uploads

# Sauvegarder les bases vectorielles
sudo tar -czvf /home/ubuntu/vector_stores_backup.tar.gz /home/ubuntu/douane_v3.9.12/AppDouane/uploads

# =============================================
# SCRIPT D'INSTALLATION COMPLET
# =============================================

# Pour exécuter le script d'installation complet
# 1. Télécharger le script
wget -O install.sh https://raw.githubusercontent.com/fregou3/AppDouane/master/install.sh

# 2. Rendre le script exécutable
chmod +x install.sh

# 3. Exécuter le script en tant que root
sudo ./install.sh

# Le script install.sh effectue les opérations suivantes :
# - Arrête tous les services existants
# - Vérifie que les ports nécessaires sont disponibles
# - Installe les dépendances globales (pm2, serve)
# - Configure et démarre le backend
# - Démarre le serveur PDF
# - Démarre le serveur d'images
# - Configure et démarre le frontend
# - Configure PM2 pour démarrer automatiquement au démarrage du système